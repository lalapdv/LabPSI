@model QuestaoAvaliacaoViewModel

@{
    ViewData["Title"] = "Nova Questão";
}

<h2>@ViewData["Title"]</h2>

<h4>@Html.DisplayFor(model => model.Avaliacao.Materia) / @Html.DisplayFor(model => model.Avaliacao.Disciplina) / @Html.DisplayFor(model => model.Avaliacao.Descricao)</h4>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AvaliacaoId" value="@Model.Avaliacao.Id" />
            <div class="form-group">
                <label asp-for="Tipo" class="control-label"></label>
                <select asp-for="Tipo" class="form-control" asp-items="ViewBag.OpcoesTipo"></select>
                <span asp-validation-for="Tipo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Enunciado" class="control-label"></label>
                <input asp-for="Enunciado" class="form-control" />
                <span asp-validation-for="Enunciado" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-default" />
                <a asp-action="Index" asp-route-avaliacaoId="@Model.Avaliacao.Id" class="btn btn-default">Cancelar</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
